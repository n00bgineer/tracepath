datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// TYPE OF USER: INDVIDUAL, ORGANIZATION
enum AccountType {
  INDIVIDUAL
  ORGANIZATION
}

// TYPE OF USER: USER, BOT & ADMIN
enum RoleType {
  USER
  BOT
  ADMIN
}

// TYPE OF SUBSCRIPTION: FREE, PRO (MONTHLY) & PRO (ANNUAL)
enum SubscriptionType {
  FREE
  PRO_MONTHLY
  PRO_ANNUAL
}

// MODEL FOR STORING USER DATA
model User {
  // METADATA
  id          String   @id @default(uuid())
  guid        String   @unique
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt
  lastLoginAt DateTime @default(now())

  // TYPES
  roleType         RoleType         @default(USER)
  accountType      AccountType      @default(INDIVIDUAL)
  subscriptionType SubscriptionType @default(FREE)

  // DETAILS
  userName    String  @unique
  email       String  @unique
  displayName String?

  // RELATIONS
  Reports Report[]
}

// MODEL FOR STORING REPORT DATA
model Report {
  // METADATA
  id                String   @id @default(uuid())
  userId            String   @default("bba8c3b0-fc14-43b0-a2fb-4ab8a8314d46")
  createdAt         DateTime @default(now())
  updateAt          DateTime @updatedAt
  reportVersion     String
  lhVersion         String?  @default("10.2.0")
  executionTime     Float
  isPrivate         Boolean? @default(false)
  isTracerouteError Boolean? @default(false)
  isLighthouseError Boolean? @default(false)
  regionName        String
  url               String
  finalUrl          String?
  siteMeta          Json?

  // DETAILS
  traceroute        Json? // Tracerouting Data
  fcpScore          Float? // First Contentful Paint
  fcpValue          Float?
  lcpScore          Float? // Largest Contentful Paint
  lcpValue          Float?
  tbtScore          Float? // Total Blocking Time
  tbtValue          Float?
  ttiScore          Float? // Time To Interactive
  ttiValue          Float?
  clsScore          Float? // Cumulative Layout Shift
  srtValue          Float? // Server Response Time
  srtItems          Json?
  speedIndexScore   Float? // Speed Index
  speedIndexValue   Float?
  bootupTimeScore   Float? // Bootup Time
  bootupTimeValue   Float?
  bootupTimeItems   Json?
  bootupTimeSummary Json?
  thirdPartyItems   Json? // Third Party Summary
  thirdPartySummary Json?

  // RELATIONS
  User   User    @relation(fields: [userId], references: [id])
  Region Region? @relation(fields: [regionName], references: [regionName])
}

// TYPE OF PROVIDER FOR CLOUD INSTANCE
enum ProviderType {
  AWSEC2
  AWSLS
  GOOGLE
  AZURE
  DIGITALOCEAN
  ALIBABA
}

// MODEL FOR STORING CLOUD INSTANCE DATA
model Region {
  // METADATA
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  expiryAt  DateTime

  // TYPES
  providerType ProviderType?

  // DETAILS
  name          String //e.g. ðŸ‡«ðŸ‡· Paris
  regionName    String @unique //e.g. eu-west-3a
  authKey       String @unique @default(uuid())
  ipAddress     String @unique //SHOULD ALSO INCLUDE PORT NO
  portNo        String
  machineConfig Json?

  // RELATIONS
  Reports Report[]
}
